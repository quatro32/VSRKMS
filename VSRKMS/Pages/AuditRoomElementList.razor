@page "/AuditRoomElementList"

@if (roomElements.Any() == false)
{
    <DynamicComponent Type="@typeof(LoadSpinner)" />
}
else
{
    <h5 class="info-text">Ruimte: @Current.Instance.Room.Number</h5>
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Element</th>
            </tr>
        </thead>
        <tbody>
            @foreach (RoomElement roomElement in roomElements)
            {
                <tr id="@roomElement.ElementId">
                    <td @onclick="() => OpenRoomElementFault(roomElement)">@roomElement.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<RoomElement> roomElements = new List<RoomElement>();

    private async void OpenRoomElementFault(RoomElement roomElement)
    {
        Current.Instance.RoomElement = roomElement;
        NavManager.NavigateTo("/AuditRoomElementFaultList");
    }

    //before page load
    protected override async Task OnInitializedAsync()
    {
        //check if room already has elements
        if (Current.Instance.Room.RoomElements == null || Current.Instance.Room.RoomElements.Any() == false)
        {
            Current.Instance.Room.RoomElements = new List<RoomElement>();
            //add elements from corresponding category from auditresults to room (used due to bad coding in backend)
            foreach (AuditResult ar in Current.Instance.AuditCategory.AuditResults)
            {
                Current.Instance.Room.RoomElements.Add(new RoomElement()
                {
                    Guid = Guid.NewGuid().ToString(),
                    ElementId = ar.IDElement,
                    Name = ar.ElementName
                });
            }
        }

        roomElements = Current.Instance.Room.RoomElements;
    }
}
